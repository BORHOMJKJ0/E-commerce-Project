{
    "openapi": "3.0.0",
    "info": {
        "title": "E-commerce API",
        "description": "API documentation for the E-commerce project",
        "contact": {
            "email": "support@yourapi.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "operationId": "6fba1dee4d21d4b5aefb654baaec9dc5",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a category",
                "operationId": "259bfe21770a62162e03fca3087a6309",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "fruits"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a category by ID",
                "operationId": "c0d36ad0839b38ef0ac02a5318942b1e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "operationId": "4cca46d3c0ef01421912854821ace435",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "operationId": "31ac48cdbe5cde52526a4c909dc0c114",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Updated Category Name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/order/{column}/{direction}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Order categories by a specific column",
                "operationId": "e0b9985a243e9b51fffe68fbfb21133d",
                "parameters": [
                    {
                        "name": "column",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid column or direction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid column or direction"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/contact/add": {
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Add contact information",
                "operationId": "eefc784f4b0e661463509c265873402f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "contact_type_id",
                                    "link"
                                ],
                                "properties": {
                                    "contact_type_id": {
                                        "description": "Contact type ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "link": {
                                        "description": "Contact information value (facebook_account, instagram_account, tiwtter_account)",
                                        "type": "string",
                                        "example": "your link"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Contact information added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Contact information added successfully"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "error": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/contact/show/{user_id}": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Retrieve contact information by user ID",
                "operationId": "113661d4af50e278a27106b8310bc57c",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The ID of the user to retrieve contact information for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of contact information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "contacts": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "contact_type_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "link": {
                                                        "type": "string",
                                                        "example": "your link"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact information not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Contact information not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/contact/remove/{contact_information_id}": {
            "delete": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Delete a contact by ID",
                "operationId": "9052216afd52238534a0eee1dfac2315",
                "parameters": [
                    {
                        "name": "contact_information_id",
                        "in": "path",
                        "description": "The ID of the contact information to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Contact deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Contact not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/contact/remove-all": {
            "delete": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Delete all contacts for the authenticated user",
                "operationId": "3b679083ac2c3127f2e87dcc3d5c1eee",
                "responses": {
                    "200": {
                        "description": "All contacts deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All Contacts deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Contacts not found for this user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Contacts not found for this user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/email-verification": {
            "post": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Verify user's email using OTP",
                "operationId": "cdbb59bcd9aecf6c2bdf9ee42f8b7fb5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email to verify",
                                        "type": "string",
                                        "format": "email",
                                        "example": "hzaeter04@gmail.com"
                                    },
                                    "otp": {
                                        "description": "OTP code for email verification",
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verification successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Email verification successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid email activation code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Your email activation code is invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/email-verification/{email}": {
            "get": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Send an email verification code to the user",
                "operationId": "9ebcfc912dc8f91e5126feb65db34b28",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "User's email to send the verification code to",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "example": "hzaeter04@gmail.com"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verification code sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The activation code has been sent to your email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Email already verified"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all products",
                "operationId": "4d81f6edc16f046d4562af9b09258bbe",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a product",
                "operationId": "41d5731c8ad035c7aa59974fb076822c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "image",
                                    "price",
                                    "category_id",
                                    "user_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Sample Product"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "image_url.jpg"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50.75
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a single product by ID",
                "operationId": "360ea71bb08390c945e79aa977ebf50e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "operationId": "28a5b7e282a2573b78b84d635084ebb7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product",
                "operationId": "4949a22028787b1e3ea1c3f09bf7b8b4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated product name"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "updated_image.jpg"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 199.99
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/order/{column}/{direction}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Order products by a specific column",
                "operationId": "fd3f51a8b8a44a87a064005b898f546e",
                "parameters": [
                    {
                        "name": "column",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "price",
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid column or direction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid column or direction"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/warehouses": {
            "get": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "Get all warehouses",
                "operationId": "a27c03c26cb3d146e614974c69b093ff",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WarehouseResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "Create a warehouse",
                "operationId": "f3631e1c064dc1c40caa0e38e5383bf6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "pure_price",
                                    "payment_date",
                                    "settlement_date",
                                    "expiry_date",
                                    "product_id"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "example": 100
                                    },
                                    "pure_price": {
                                        "type": "number",
                                        "example": 50.75
                                    },
                                    "payment_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-09-01"
                                    },
                                    "settlement_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-09-15"
                                    },
                                    "expiry_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-01"
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Warehouse created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WarehouseResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/warehouses/{id}": {
            "get": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "Get a warehouse by ID",
                "operationId": "aad187157230e40d8ffa2c4423366f50",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WarehouseResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "Delete a warehouse",
                "operationId": "e5f3e8c0cc0c5a47918d9c85f71f9d37",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Warehouse deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Warehouse deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Warehouse not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Warehouse not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "Update a warehouse",
                "operationId": "e81e4f1745e14e339d8d5fff87142a8b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "pure_price",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "payment_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "settlement_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "expiry_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Warehouse updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WarehouseResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Warehouse not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Warehouse not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/warehouses/order/{column}/{direction}": {
            "get": {
                "tags": [
                    "Warehouses"
                ],
                "summary": "Order warehouses by a specific column",
                "operationId": "9904bc7c266c0860dec9b93aca190ef3",
                "parameters": [
                    {
                        "name": "column",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "expiry_date",
                                "created_at",
                                "updated_at",
                                "payment_date",
                                "settlement_date",
                                "pure_price"
                            ]
                        }
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WarehouseResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid column or direction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid column or direction"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CategoryResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Electronics"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductResource"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-15 12:30"
                    }
                },
                "type": "object"
            },
            "ProductResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Product A"
                    },
                    "image": {
                        "type": "string",
                        "example": "https://example.com/product.jpg"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": "99.99"
                    },
                    "user": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "total_amount": {
                        "type": "integer",
                        "example": 500
                    },
                    "expiry_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-12-31"
                    },
                    "category": {
                        "type": "string",
                        "example": "Electronics"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-15 12:30"
                    }
                },
                "type": "object"
            },
            "WarehouseResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "pure_price": {
                        "type": "number",
                        "format": "float",
                        "example": "100.50"
                    },
                    "amount": {
                        "type": "number",
                        "format": "integer",
                        "example": "0"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-09-15"
                    },
                    "settlement_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-09-30"
                    },
                    "expiry_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-12-31"
                    },
                    "product": {
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "Product A"
                            },
                            "price": {
                                "type": "number",
                                "format": "float",
                                "example": "50.00"
                            },
                            "category": {
                                "type": "string",
                                "example": "Category Name"
                            },
                            "user": {
                                "type": "string",
                                "example": "John Doe"
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-15 12:30"
                    }
                },
                "type": "object"
            },
            "Category": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Electronics"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Product"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-15 12:30"
                    }
                },
                "type": "object"
            },
            "Product": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Smartphone"
                    },
                    "image": {
                        "type": "string",
                        "example": "product_image.jpg"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 499.99
                    },
                    "user": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "total_amount": {
                        "type": "integer",
                        "example": 100
                    },
                    "expiry_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-12-31"
                    },
                    "category": {
                        "type": "string",
                        "example": "Electronics"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-15 12:30"
                    }
                },
                "type": "object"
            },
            "Warehouse": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "pure_price": {
                        "type": "number",
                        "format": "float",
                        "example": 300.5
                    },
                    "amount": {
                        "type": "number",
                        "format": "integer",
                        "example": "100"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-09-01"
                    },
                    "settlement_date": {
                        "type": "string",
                        "format": "date",
                        "example": null
                    },
                    "expiry_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-12-01"
                    },
                    "products": {
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "Smartphone"
                            },
                            "price": {
                                "type": "number",
                                "format": "float",
                                "example": 499.99
                            },
                            "category": {
                                "type": "string",
                                "example": "Electronics"
                            },
                            "user": {
                                "type": "string",
                                "example": "John Doe"
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-15 12:30"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter JWT Bearer token in the format 'Bearer {token}'",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "Contacts",
            "description": "Contacts"
        },
        {
            "name": "Email Verification",
            "description": "Email Verification"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "Warehouses",
            "description": "Warehouses"
        }
    ]
}