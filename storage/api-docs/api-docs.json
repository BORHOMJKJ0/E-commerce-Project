{
    "openapi": "3.0.0",
    "info": {
        "title": "E-commerce API",
        "description": "API documentation for the E-commerce project",
        "contact": {
            "email": "support@yourapi.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/"
        }
    ],
    "paths": {
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "operationId": "6fba1dee4d21d4b5aefb654baaec9dc5",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a category",
                "operationId": "259bfe21770a62162e03fca3087a6309",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Category name",
                                        "type": "string",
                                        "example": "Fruits"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Electronic devices"
                                        },
                                        "products": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/my": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get My categories",
                "operationId": "97de98d6dc132bd53483985d8f00dead",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a category by ID",
                "operationId": "c0d36ad0839b38ef0ac02a5318942b1e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category you want to show it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "operationId": "e29156104f707c7946c7148a2c97fb49",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID you want to update it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Category name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Vegetables"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Electronic devices"
                                        },
                                        "products": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Smartphone"
                                                    },
                                                    "user": {
                                                        "type": "string",
                                                        "example": "Hasan Zaeter"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You cannot update category with associated products."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "operationId": "4cca46d3c0ef01421912854821ace435",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID you want to delete it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this Category."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/order/{column}/{direction}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Order categories by a specific column",
                "operationId": "e0b9985a243e9b51fffe68fbfb21133d",
                "parameters": [
                    {
                        "name": "column",
                        "in": "path",
                        "description": "Column you want to order the categories by it",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "description": "Dircetion of ordering",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid column or direction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid column or direction or parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/my/order/{column}/{direction}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Order My categories by a specific column",
                "operationId": "496cba0949339dd3c3bebc01adf43b3b",
                "parameters": [
                    {
                        "name": "column",
                        "in": "path",
                        "description": "Column you want to order the categories by it",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "description": "Dircetion of ordering",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid column or direction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid column or direction or parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/comments": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get all comments",
                "operationId": "b40400579554e67601d0de2ba0ca4d31",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommentResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Create a comment",
                "operationId": "11e1da5e22b6d2e66548bf7fbbd71aad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "review_id"
                                ],
                                "properties": {
                                    "review_id": {
                                        "description": "The ID of your review",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "text": {
                                        "description": "The comment text. Must provide either 'text' or 'image', or both.",
                                        "type": "string",
                                        "example": "This is a comment"
                                    },
                                    "image": {
                                        "description": "Optional image. Must provide either 'text' or 'image', or both.",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "text": {
                                            "type": "string",
                                            "example": "This is a comment"
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "http://example.com/image.jpg",
                                            "nullable": true
                                        },
                                        "product_name": {
                                            "type": "string",
                                            "example": "apple"
                                        },
                                        "user_name": {
                                            "type": "string",
                                            "example": "Only"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The text field is required when none of image are present."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/comments/my": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get My comments",
                "operationId": "3eb38134ecd323eb3a549053a87bbc0d",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommentResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/comments/{id}": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get a comment by ID",
                "operationId": "a6b92923e83e4e813c8f28874f5139fc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment ID you want to show it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Comment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Comments"
                ],
                "summary": "Update a comment",
                "operationId": "660a1f4c0aa421840b7e22cb27d9ab41",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment ID you want to update it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "description": "Comment Text",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Thank you!"
                        }
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "description": "Comment Image",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    {
                        "name": "review_id",
                        "in": "query",
                        "description": "Review ID you want to update it",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "text": {
                                            "type": "string",
                                            "example": "Thank you!"
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "https://example.com/images/smartphone-xyz.jpg"
                                        },
                                        "product_name": {
                                            "type": "string",
                                            "example": "apple"
                                        },
                                        "user_name": {
                                            "type": "string",
                                            "example": "Only"
                                        },
                                        "review_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to update this Comment."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Comment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Comments"
                ],
                "summary": "Delete a comment",
                "operationId": "747459a5a47b5c0128fd99d3e9a6bb4f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment ID you want to delete it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this Comment."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Comment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/comments/order/{column}/{direction}": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Order comments by a specific column",
                "operationId": "478cfdee4a54806af3addc4c9c310993",
                "parameters": [
                    {
                        "name": "column",
                        "in": "path",
                        "description": "Column you want to order the comments by it",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "description": "Dircetion of ordering",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommentResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid column or direction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid column or direction or parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/comments/my/order/{column}/{direction}": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Order My comments by a specific column",
                "operationId": "d1df31d7050b1168f0148502e44f0fcd",
                "parameters": [
                    {
                        "name": "column",
                        "in": "path",
                        "description": "Column you want to order the comments by it",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "description": "Dircetion of ordering",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommentResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid column or direction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid column or direction or parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/contact/add": {
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Add contact information",
                "operationId": "eefc784f4b0e661463509c265873402f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "contact_type_id",
                                    "link"
                                ],
                                "properties": {
                                    "contact_type_id": {
                                        "description": "Contact type ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "link": {
                                        "description": "Contact information value (facebook_account, instagram_account, tiwtter_account)",
                                        "type": "string",
                                        "example": "your link"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Contact information added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact information added successfully"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 201
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "error": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/contact/show/{user_id}": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Retrieve contact information by user ID",
                "operationId": "113661d4af50e278a27106b8310bc57c",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The ID of the user to retrieve contact information for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of contact information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "contacts": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "contact_type_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "link": {
                                                        "type": "string",
                                                        "example": "your link"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact information not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact information not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user_id}/contacts/{contact_id}": {
            "put": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Update user contact information",
                "operationId": "bd6ae08b967f4ecf34ccd2b05d999114",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "contact_id",
                        "in": "path",
                        "description": "ID of the contact to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "link": {
                                        "type": "string",
                                        "example": "https://example.com"
                                    },
                                    "contact_type_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact Information updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact Information updated successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "Hasan"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Zaeter"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "hzaeter@gmail.com"
                                                },
                                                "Address": {
                                                    "type": "string",
                                                    "example": "median"
                                                },
                                                "mobile": {
                                                    "type": "string",
                                                    "example": "0935917667"
                                                },
                                                "contact_count": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "contacts": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "link": {
                                                                "type": "string",
                                                                "example": "https://example.com"
                                                            },
                                                            "contact_type_id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "There is no Contact Information With this ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "There is no Contact Information With this id"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to update this contact"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/contact/remove/{contact_information_id}": {
            "delete": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Delete a contact by ID",
                "operationId": "9052216afd52238534a0eee1dfac2315",
                "parameters": [
                    {
                        "name": "contact_information_id",
                        "in": "path",
                        "description": "The ID of the contact information to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact deleted successfully"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/contact/remove-all": {
            "delete": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Delete all contacts for the authenticated user",
                "operationId": "3b679083ac2c3127f2e87dcc3d5c1eee",
                "responses": {
                    "200": {
                        "description": "All contacts deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All Contacts deleted successfully"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Contacts not found for this user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contacts not found for this user"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/email-verification": {
            "post": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Verify user's email using OTP",
                "operationId": "cdbb59bcd9aecf6c2bdf9ee42f8b7fb5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "code"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email to verify",
                                        "type": "string",
                                        "format": "email",
                                        "example": "hzaeter04@gmail.com"
                                    },
                                    "code": {
                                        "description": "OTP code for email verification",
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verification successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email verification successfully"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid email activation code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "data": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected email is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/email-verification/{email}": {
            "get": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Send an email verification code to the user",
                "operationId": "9ebcfc912dc8f91e5126feb65db34b28",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "User's email to send the verification code to",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "example": "hzaeter04@gmail.com"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verification code sent successfully",
                        "content": {
                            "multipart/form-data": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The activation code has been sent to your email"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email already verified"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Email not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/expression/all": {
            "get": {
                "tags": [
                    "Expressions"
                ],
                "summary": "Get all expressions",
                "operationId": "ce95ec1992e25374a09917fe5f460bb2",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/expression/add": {
            "post": {
                "tags": [
                    "Expressions"
                ],
                "summary": "Create an Expression",
                "description": "Create a new expression with product_id,id for auth user, and an optional action",
                "operationId": "81055745914e6988e7968d50962b1d37",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "user_id"
                                ],
                                "properties": {
                                    "product_id": {
                                        "description": "Product ID you want to add expression to it",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "action": {
                                        "description": "the Action Like or dislike",
                                        "type": "enum",
                                        "example": "like"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Expression created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "expression": {
                                            "properties": {
                                                "expression_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "action": {
                                                    "description": "The expression action, either 'like' or 'dislike'.",
                                                    "type": "string",
                                                    "enum": [
                                                        "like",
                                                        "dislike"
                                                    ],
                                                    "example": "like"
                                                },
                                                "status_code": {
                                                    "type": "integer",
                                                    "example": 201
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "action input is invalid"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Prodcut Not Found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/expression/show/{product_id}": {
            "get": {
                "tags": [
                    "Expressions"
                ],
                "summary": "Get product expressions including views, likes, and dislikes",
                "description": "Returns the number of views, likes, dislikes, and the list of users who interacted with the product.",
                "operationId": "Expressions_Product",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "product": {
                                            "description": "Name of the product",
                                            "type": "string"
                                        },
                                        "expression": {
                                            "properties": {
                                                "views": {
                                                    "properties": {
                                                        "number": {
                                                            "description": "Number of views",
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "users": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Hasan"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "example": [
                                                                {
                                                                    "id": 1,
                                                                    "name": "Hasan"
                                                                },
                                                                {
                                                                    "id": 2,
                                                                    "name": "Hadi"
                                                                },
                                                                {
                                                                    "id": 3,
                                                                    "name": "Anas"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "likes": {
                                                    "properties": {
                                                        "number": {
                                                            "description": "Number of likes",
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "users": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Hasan"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "example": [
                                                                {
                                                                    "id": 1,
                                                                    "name": "Hasan"
                                                                },
                                                                {
                                                                    "id": 3,
                                                                    "name": "Anas"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "disLikes": {
                                                    "properties": {
                                                        "number": {
                                                            "description": "Number of dislikes",
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "users": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Hasan"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "example": [
                                                                {
                                                                    "id": 1,
                                                                    "name": "Hasan"
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/expression/update/{product_id}": {
            "put": {
                "tags": [
                    "Expressions"
                ],
                "summary": "Update user expression for a product",
                "description": "Allows a user to update their expression (like or dislike) for a specific product.",
                "operationId": "updateExpression",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "action": {
                                        "description": "The expression action, either 'like' or 'dislike'.",
                                        "type": "string",
                                        "enum": [
                                            "like",
                                            "dislike"
                                        ],
                                        "example": "like"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Expression updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "updated successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Hasan"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "expression": {
                                            "properties": {
                                                "action": {
                                                    "type": "string",
                                                    "example": "like"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User has not expressed for this product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not expressed for this product"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "action input is invalid"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/offers": {
            "get": {
                "tags": [
                    "Offers"
                ],
                "summary": "Get all offers",
                "operationId": "82b2a3d767019d2805a70e2059bf7ed3",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OfferResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Offers"
                ],
                "summary": "Create a offer",
                "operationId": "a6d9a7f4b923441a1072570cb7a787b2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "discount_percentage",
                                    "start_date",
                                    "end_date",
                                    "product_id"
                                ],
                                "properties": {
                                    "discount_percentage": {
                                        "description": "Discount_percentage of the offer",
                                        "type": "number",
                                        "format": "float",
                                        "example": "15.50"
                                    },
                                    "start_date": {
                                        "description": "Offer Start Date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-10-01"
                                    },
                                    "end_date": {
                                        "description": "Offer End Date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-31"
                                    },
                                    "product_id": {
                                        "description": "Product ID you want to add offer to it",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Offer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OfferResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to create this Offer."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/offers/my": {
            "get": {
                "tags": [
                    "Offers"
                ],
                "summary": "Get My offers",
                "operationId": "5478b93fc7cf9bda6c93ded4c3b2f228",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OfferResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/offers/{id}": {
            "get": {
                "tags": [
                    "Offers"
                ],
                "summary": "Get a offer by ID",
                "operationId": "1bc75c9c6e634dee5d2b9ce660bfba5c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Offer ID you want to show it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OfferResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Offer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Offer not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Offers"
                ],
                "summary": "Update an offer",
                "operationId": "9a896cb858c0c57d6113d978fd830605",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Offer ID you want to update it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "discount_percentage",
                        "in": "query",
                        "description": "Discount Percentage of the offer",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 20.5
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start Date of the offer",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-10-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End Date of the offer",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-12-31"
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Product ID of the offer",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Offer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "discount_percentage": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 80
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-09-01"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-12-31"
                                        },
                                        "product": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Iphone 15"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 499.99
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A high-end smartphone with excellent features and a sleek design"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "Smartphone"
                                                },
                                                "user": {
                                                    "type": "string",
                                                    "example": "Hasan Zaeter"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to update this Offer."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Offer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Offer not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Offers"
                ],
                "summary": "Delete a offer",
                "operationId": "bf32ad4c435d8f34475df60483a038b6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Offer ID you want to delete it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Offer deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Offer deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this Offer."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Offer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Offer not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/offers/order/{column}/{direction}": {
            "get": {
                "tags": [
                    "Offers"
                ],
                "summary": "Order offers by a specific column",
                "operationId": "6ead40a61d18d819cacf8537069a72be",
                "parameters": [
                    {
                        "name": "column",
                        "in": "path",
                        "description": "Column you want to order the offers by it",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "discount_percentage",
                                "start_date",
                                "end_date",
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "description": "Dircetion of ordering",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OfferResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid column or direction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid column or direction or parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/offers/my/order/{column}/{direction}": {
            "get": {
                "tags": [
                    "Offers"
                ],
                "summary": "Order My offers by a specific column",
                "operationId": "8e8019bc9e99feab22bea5546f987873",
                "parameters": [
                    {
                        "name": "column",
                        "in": "path",
                        "description": "Column you want to order the offers by it",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "discount_percentage",
                                "start_date",
                                "end_date",
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "description": "Dircetion of ordering",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OfferResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid column or direction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid column or direction or parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all products",
                "operationId": "4d81f6edc16f046d4562af9b09258bbe",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a product",
                "operationId": "41d5731c8ad035c7aa59974fb076822c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "image",
                                    "price",
                                    "description",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Product Name",
                                        "type": "string",
                                        "example": "Perform"
                                    },
                                    "image": {
                                        "description": "Product Image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "price": {
                                        "description": "Product Price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 250.75
                                    },
                                    "description": {
                                        "description": "Product Description",
                                        "type": "string",
                                        "example": "This is a new Perform and it cool Try it"
                                    },
                                    "category_id": {
                                        "description": "Category ID that product belong to it",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 42
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Iphone 15"
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "https://example.com/images/smartphone-xyz.jpg"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 499.99
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "A high-end smartphone with excellent features and a sleek design."
                                        },
                                        "current_price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 449.99
                                        },
                                        "user": {
                                            "type": "string",
                                            "example": "Hasan Zaeter"
                                        },
                                        "offers": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        },
                                        "total_amount": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "expiry_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "null"
                                        },
                                        "category": {
                                            "type": "string",
                                            "example": "Smartphones"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to add this product."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/my": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get My products",
                "operationId": "1f5b1265a3347c4129b8ff0355754b89",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a single product by ID",
                "operationId": "360ea71bb08390c945e79aa977ebf50e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID you want to show it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product",
                "operationId": "f0cfd09da130cb47a41a668ef2efd89a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID you want to update it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Product name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Perform"
                        }
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "description": "Product Image",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Product price",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 50.75
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Product Description",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "This is a new Perform and it cool Try it"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category ID that product belong to it",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Iphone 14"
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "https://example.com/images/smartphone-xyz.jpg"
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 499.99
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "A high-end smartphone with excellent features and a sleek design."
                                        },
                                        "current_price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 449.99
                                        },
                                        "user": {
                                            "type": "string",
                                            "example": "Hasan Zaeter"
                                        },
                                        "offers": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "discount": {
                                                        "type": "string",
                                                        "example": "10.00"
                                                    },
                                                    "starting_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-09-22 12:00"
                                                    },
                                                    "ending_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-01-15 23:59"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "total_amount": {
                                            "type": "integer",
                                            "example": 250
                                        },
                                        "expiry_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-01-15"
                                        },
                                        "category": {
                                            "type": "string",
                                            "example": "Smartphones"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to update this product."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "operationId": "28a5b7e282a2573b78b84d635084ebb7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID you want to delete it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this product."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/order/{column}/{direction}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Order products by a specific column",
                "operationId": "fd3f51a8b8a44a87a064005b898f546e",
                "parameters": [
                    {
                        "name": "column",
                        "in": "path",
                        "description": "Column you want to order the products by it",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "price",
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "description": "Dircetion of ordering",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid column or direction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid column or direction or parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/my/order/{column}/{direction}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Order My products by a specific column",
                "operationId": "90db3aa6bc7ebce728349e61b123ef84",
                "parameters": [
                    {
                        "name": "column",
                        "in": "path",
                        "description": "Column you want to order the products by it",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "price",
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "description": "Dircetion of ordering",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid column or direction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid column or direction or parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get all reviews",
                "operationId": "fc88ed087c6c5b291884b0b07c5e50f0",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReviewResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Create a review",
                "operationId": "9d97ada97ae63a51475778549b19af7a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "rating",
                                    "product_id"
                                ],
                                "properties": {
                                    "rating": {
                                        "description": "The rating of the product, a number between 0 and 5",
                                        "type": "number",
                                        "format": "float",
                                        "example": "4.5"
                                    },
                                    "product_id": {
                                        "description": "Product ID you want to add review to it",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "rating": {
                                            "type": "number",
                                            "format": "float",
                                            "example": "4"
                                        },
                                        "product_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reviews/my": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get My reviews",
                "operationId": "cc25d006e2af9af70577988b852e89c0",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReviewResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reviews/{id}": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get a review by ID",
                "operationId": "092553c2feddf7fa1c3cbd70d1bd2110",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Review ID you want to show it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Review not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Update a review",
                "operationId": "d84e97c925903421fa906b788d418562",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "review ID you want to update it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "description": "your rating in this product",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": "3"
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "The product you want to add rating to it",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "rating": {
                                            "type": "number",
                                            "format": "float",
                                            "example": "2"
                                        },
                                        "product_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Review not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Delete a review",
                "operationId": "c8fad9620f0ff42778800fa72ef81738",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Review ID you want to delete it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this Review."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Rwview not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reviews/order/{column}/{direction}": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Order reviews by a specific column",
                "operationId": "54c94b7ceb5d98c6b7ab97e30d77b8a4",
                "parameters": [
                    {
                        "name": "column",
                        "in": "path",
                        "description": "Column you want to order the reviews by it",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "rating",
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "description": "Dircetion of ordering",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReviewResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid column or direction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid column or direction or parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reviews/my/order/{column}/{direction}": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Order My reviews by a specific column",
                "operationId": "c9389e6bd0264aa1b406c26d506983da",
                "parameters": [
                    {
                        "name": "column",
                        "in": "path",
                        "description": "Column you want to order the reviews by it",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "rating",
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "description": "Dircetion of ordering",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReviewResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid column or direction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid column or direction or parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/all": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users with their contact information",
                "operationId": "459240e806f82161a7c114e9f7f1ede8",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of users and their contact details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Hasan"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "hzaeter@gmail.com"
                                            },
                                            "mobile": {
                                                "type": "string",
                                                "example": "0935917557"
                                            },
                                            "contacts": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "user_id": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "contact_type_id": {
                                                            "type": "integer",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Register a new user",
                "operationId": "53f9ea9acbfec6d4b0ac7ee4c670bf76",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "mobile",
                                    "address",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "User first name",
                                        "type": "string",
                                        "example": "hasan"
                                    },
                                    "last_name": {
                                        "description": "User last name",
                                        "type": "string",
                                        "example": "zaeter"
                                    },
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "example": "hzaeter@gmail.com"
                                    },
                                    "mobile": {
                                        "description": "User mobile phone",
                                        "type": "string",
                                        "example": "0935917667"
                                    },
                                    "address": {
                                        "description": "User address",
                                        "type": "string",
                                        "example": "midan"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "User confirmation password",
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The activation code has been sent to your email"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "hasan zaeter"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "hzaeter04@gmail.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "User login",
                "operationId": "43cef47c17b0d85b0e7f73c6701c0731",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "example": "hzaeter@gmail.com"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string",
                                        "example": "password1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "jwt-token"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "bearer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "first_name": {
                                                            "type": "string",
                                                            "example": "hasan"
                                                        },
                                                        "last_name": {
                                                            "type": "string",
                                                            "example": "zaeter"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "hzaeter@gmail.com"
                                                        },
                                                        "mobile": {
                                                            "type": "string",
                                                            "example": "0935917557"
                                                        },
                                                        "Address": {
                                                            "type": "string",
                                                            "example": "median"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials. Please check your email and password"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "data": {
                                            "properties": {
                                                "email": {
                                                    "type": "string",
                                                    "example": "Email does not exist in our records"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your email address is not verified"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/logout": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Logout the current user",
                "operationId": "bde2325515b1a74518fee8bb0419304a",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "Hasan"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Zaeter"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "hzaeter04@gmail.com"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/profile/{user_id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user profile by user ID",
                "operationId": "73a449a806fd6c97a0ab1fde3d3bc753",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The ID of the user to retrieve the profile for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of user profile and contact details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile retrieved successfully"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "Hasan"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Zaeter"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "hzaeter@gmail.com"
                                        },
                                        "mobile": {
                                            "type": "string",
                                            "example": "0935917667"
                                        },
                                        "Address": {
                                            "type": "string",
                                            "example": "median"
                                        },
                                        "contacts": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "contact_type_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User Not Found"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/update": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile",
                "operationId": "1d552b234ff2381d7fdc8a15df16f5c2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "User first name",
                                        "type": "string",
                                        "example": "Hasan"
                                    },
                                    "last_name": {
                                        "description": "User last name",
                                        "type": "string",
                                        "example": "Zaeter"
                                    },
                                    "mobile": {
                                        "description": "User mobile phone",
                                        "type": "string",
                                        "example": "0935917667"
                                    },
                                    "address": {
                                        "description": "User Address",
                                        "type": "string",
                                        "example": "median"
                                    },
                                    "old_password": {
                                        "description": "User old password",
                                        "type": "string",
                                        "example": "oldpassword123"
                                    },
                                    "new_password": {
                                        "description": "User new password",
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "new_password_confirmation": {
                                        "description": "User confirmation new password",
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "Hasan"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Zaeter"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "hzaeter@gmail.com"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "median"
                                                },
                                                "mobile": {
                                                    "type": "string",
                                                    "example": "0935917667"
                                                },
                                                "contacts": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "user_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "contact_type_id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid old password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "successful": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to modify this profile"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/delete/{id}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "f6c8835d41fda2883d613997316b8d41",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID you want to delete it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this User."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/warehouses": {
            "get": {
                "tags": [
                    "Warehouse"
                ],
                "summary": "Get my warehouses",
                "operationId": "a27c03c26cb3d146e614974c69b093ff",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WarehouseResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Warehouse"
                ],
                "summary": "Create a warehouse",
                "operationId": "f3631e1c064dc1c40caa0e38e5383bf6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "pure_price",
                                    "payment_date",
                                    "expiry_date",
                                    "product_id"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "Warehouse Amount",
                                        "type": "number",
                                        "example": 100
                                    },
                                    "pure_price": {
                                        "description": "Warehouse pure price",
                                        "type": "number",
                                        "example": 50.75
                                    },
                                    "payment_date": {
                                        "description": "Warehouse payment date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-09-01"
                                    },
                                    "settlement_date": {
                                        "description": "Warehouse settlement date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-09-15"
                                    },
                                    "expiry_date": {
                                        "description": "Warehouse exoiry date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-01"
                                    },
                                    "product_id": {
                                        "description": "Product ID that you want to add this warehouse to it",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Warehouse created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WarehouseResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to create this warehouse ."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/warehouses/{id}": {
            "get": {
                "tags": [
                    "Warehouse"
                ],
                "summary": "Get a warehouse by ID",
                "operationId": "aad187157230e40d8ffa2c4423366f50",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "your Warehouse ID you want to show it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WarehouseResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to view this warehouse."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Warehouse"
                ],
                "summary": "Update a warehouse",
                "operationId": "9807d87b2104bf235319f783a0c00d2d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "your Warehouse ID that you want to update it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "THe amount of this warehouse",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 100
                        }
                    },
                    {
                        "name": "pure_price",
                        "in": "query",
                        "description": "Pure price of this warehouse",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 225.5
                        }
                    },
                    {
                        "name": "payment_date",
                        "in": "query",
                        "description": "payment date of this warehouse",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-09-10"
                        }
                    },
                    {
                        "name": "settlement_date",
                        "in": "query",
                        "description": "Settlement date of this warehouse",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-09-24"
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Product ID of this warehouse",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Warehouse updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "pure_price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3500.5
                                        },
                                        "amount": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "payment_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-09-15"
                                        },
                                        "settlement_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-09-30"
                                        },
                                        "expiry_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-12-31"
                                        },
                                        "product": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Iphone 15"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": "499.99"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "Smartphone"
                                                },
                                                "user": {
                                                    "type": "string",
                                                    "example": "Hasan Zaeter"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this warehouse ."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Warehouse not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Warehouse not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Warehouse"
                ],
                "summary": "Delete a warehouse",
                "operationId": "e5f3e8c0cc0c5a47918d9c85f71f9d37",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "your Warehouse ID you want to delete it",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Warehouse deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Warehouse deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this warehouse ."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Warehouse not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Warehouse not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/warehouses/order/{column}/{direction}": {
            "get": {
                "tags": [
                    "Warehouse"
                ],
                "summary": "Order My warehouses by a specific column",
                "operationId": "9904bc7c266c0860dec9b93aca190ef3",
                "parameters": [
                    {
                        "name": "column",
                        "in": "path",
                        "description": "Column you want to order the warehouses by it",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "expiry_date",
                                "created_at",
                                "updated_at",
                                "payment_date",
                                "settlement_date",
                                "pure_price"
                            ]
                        }
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "description": "Dircetion of ordering",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Number of items per page ",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WarehouseResource"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid column or direction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid column or direction or parameters"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CategoryResource": {
                "title": "Category Resource",
                "description": "Category details",
                "properties": {
                    "id": {
                        "description": "The ID of the Category",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "The name of the Category",
                        "type": "string",
                        "example": "Electronics"
                    },
                    "products": {
                        "description": "Product related to the Category",
                        "type": "array",
                        "items": {
                            "properties": {
                                "name": {
                                    "description": "The name of the product",
                                    "type": "string",
                                    "example": "Smartphone"
                                },
                                "user": {
                                    "description": "The owner of the product",
                                    "type": "string",
                                    "example": "Hasan Zaeter"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "CommentResource": {
                "title": "Comment Resource",
                "description": "Comment details",
                "properties": {
                    "id": {
                        "description": "The ID of the comment",
                        "type": "integer",
                        "example": 1
                    },
                    "review_id": {
                        "description": "The ID of the review",
                        "type": "integer",
                        "example": 1
                    },
                    "product_name": {
                        "description": "The name of the product",
                        "type": "string",
                        "example": "iPhone 15"
                    },
                    "user_name": {
                        "description": "The full_name of the user who left the comment",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "text": {
                        "description": "The comment text",
                        "type": "string",
                        "example": "This is a great product!",
                        "nullable": true
                    },
                    "image": {
                        "description": "The image URL attached to the comment",
                        "type": "string",
                        "example": "http://example.com/image.jpg",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ContactResource": {
                "title": "Contact Resource",
                "description": "Contact Resource",
                "properties": {
                    "id": {
                        "description": "The ID of the contact",
                        "type": "integer",
                        "example": 1
                    },
                    "link": {
                        "description": "The contact link",
                        "type": "string",
                        "example": "https://example.com"
                    },
                    "contact_type_id": {
                        "description": "The contact type ID",
                        "type": "integer",
                        "example": 2
                    }
                },
                "type": "object"
            },
            "OfferResource": {
                "title": "Offer Resource",
                "description": "Offer details",
                "properties": {
                    "id": {
                        "description": "The ID of the offer",
                        "type": "integer",
                        "example": 1
                    },
                    "discount_percentage": {
                        "description": "The discount percentage of the offer",
                        "type": "number",
                        "format": "float",
                        "example": 10
                    },
                    "start_date": {
                        "description": "The start date of the offer",
                        "type": "string",
                        "format": "date",
                        "example": "2024-09-01"
                    },
                    "end_date": {
                        "description": "The end date of the offer",
                        "type": "string",
                        "format": "date",
                        "example": "2024-12-31"
                    },
                    "product": {
                        "description": "Product Detalis related to the offer",
                        "properties": {
                            "name": {
                                "description": "The name of the product",
                                "type": "string",
                                "example": "Iphone 15"
                            },
                            "price": {
                                "description": "The price of the product",
                                "type": "number",
                                "format": "float",
                                "example": 499.99
                            },
                            "description": {
                                "description": "The description of the product",
                                "type": "string",
                                "example": "A high-end smartphone with excellent features and a sleek design"
                            },
                            "category": {
                                "description": "The category of the product",
                                "type": "string",
                                "example": "Smartphone"
                            },
                            "user": {
                                "description": "The owner of the product",
                                "type": "string",
                                "example": "Hasan Zaeter"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ProductResource": {
                "title": "Product Resource",
                "description": "Product details",
                "properties": {
                    "id": {
                        "description": "The ID of the product",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "The name of the product",
                        "type": "string",
                        "example": "Iphone 15"
                    },
                    "image": {
                        "description": "The image of the product",
                        "type": "string",
                        "example": "https://example.com/images/smartphone-xyz.jpg"
                    },
                    "price": {
                        "description": "The price of the product",
                        "type": "number",
                        "format": "float",
                        "example": 499.99
                    },
                    "description": {
                        "description": "The description of the product",
                        "type": "string",
                        "example": "A high-end smartphone with excellent features and a sleek design."
                    },
                    "current_price": {
                        "description": "The current price of the product",
                        "type": "number",
                        "format": "float",
                        "example": 449.99
                    },
                    "user": {
                        "description": "The owner of the product",
                        "type": "string",
                        "example": "Hasan Zaeter"
                    },
                    "offers": {
                        "description": "Offer related to the product",
                        "type": "array",
                        "items": {
                            "properties": {
                                "discount": {
                                    "description": "The discount percentage of the offer",
                                    "type": "string",
                                    "example": "10.00"
                                },
                                "starting_at": {
                                    "description": "The start date of the offer",
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2024-09-22 12:00"
                                },
                                "ending_at": {
                                    "description": "The end date of the offer",
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2025-01-15 23:59"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "expressions": {
                        "description": "Expressions related to the product",
                        "properties": {
                            "views": {
                                "description": "The Number of views of the product",
                                "type": "integer",
                                "example": 120
                            },
                            "likes": {
                                "description": "The Number of likes of the product",
                                "type": "integer",
                                "example": 45
                            },
                            "dislikes": {
                                "description": "The Number of dislikes of the product",
                                "type": "integer",
                                "example": 5
                            }
                        },
                        "type": "object"
                    },
                    "total_amount": {
                        "description": "The total amount from the product",
                        "type": "integer",
                        "example": 50
                    },
                    "expiry_date": {
                        "description": "The expiry date of the product",
                        "type": "string",
                        "format": "date",
                        "example": "2025-12-31"
                    },
                    "category": {
                        "description": "The category of the product",
                        "type": "string",
                        "example": "Smartphones"
                    }
                },
                "type": "object"
            },
            "ReviewResource": {
                "title": "Review Resource",
                "description": "Review details",
                "properties": {
                    "id": {
                        "description": "The ID of the review",
                        "type": "integer",
                        "example": 1
                    },
                    "rating": {
                        "description": "The rating given by the user",
                        "type": "number",
                        "format": "float",
                        "example": 4.5
                    },
                    "comment": {
                        "description": "Comment related to the review",
                        "properties": {
                            "id": {
                                "description": "The ID of the comment",
                                "type": "integer",
                                "example": 1
                            },
                            "text": {
                                "description": "The comment text",
                                "type": "string",
                                "example": "Great product!",
                                "nullable": true
                            },
                            "image": {
                                "description": "The image URL attached to the comment",
                                "type": "string",
                                "example": "http://example.com/image.jpg",
                                "nullable": true
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "product": {
                        "description": "The details of the reviewed product",
                        "properties": {
                            "id": {
                                "description": "The ID of the product",
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "description": "The name of the product",
                                "type": "string",
                                "example": "iPhone 15"
                            }
                        },
                        "type": "object"
                    },
                    "user": {
                        "description": "The details of the user who left the review",
                        "properties": {
                            "id": {
                                "description": "The ID of the user",
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "description": "The name of the user",
                                "type": "string",
                                "example": "John Doe"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "User ContactsResource": {
                "title": "User Contacts Resource",
                "description": "User Contacts Resource",
                "properties": {
                    "id": {
                        "description": "The ID of the user",
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "description": "The first name of the user",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "description": "The last name of the user",
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "description": "The email address of the user",
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "address": {
                        "description": "The address of the user",
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "mobile": {
                        "description": "The mobile number of the user",
                        "type": "string",
                        "example": "123456789"
                    },
                    "contact_count": {
                        "description": "The count of user contacts",
                        "type": "integer",
                        "example": 3
                    },
                    "contacts": {
                        "description": "The list of contacts associated with the user",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContactResource"
                        }
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "description": "User details",
                "properties": {
                    "id": {
                        "description": "The ID of the user",
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "description": "The first name of the user",
                        "type": "string",
                        "example": "John"
                    },
                    "Llast_name": {
                        "description": "The last name of the user",
                        "type": "string",
                        "example": "Doe",
                        "nullable": true
                    },
                    "email": {
                        "description": "The email of the user",
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "mobile": {
                        "description": "The Phone number of the user",
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "address": {
                        "description": "The Address of the user",
                        "type": "string",
                        "example": "123 Main St, Anytown, USA",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "WarehouseResource": {
                "title": "Warehouse Resource",
                "description": "Warehouse details",
                "properties": {
                    "id": {
                        "description": "The ID of the warehouse",
                        "type": "integer",
                        "example": 1
                    },
                    "pure_price": {
                        "description": "The pure price of the warehouse",
                        "type": "number",
                        "format": "float",
                        "example": "350.50"
                    },
                    "amount": {
                        "description": "The amount of the warehouse",
                        "type": "number",
                        "format": "integer",
                        "example": "250"
                    },
                    "payment_date": {
                        "description": "The payment date of the warehouse",
                        "type": "string",
                        "format": "date",
                        "example": "2024-09-15"
                    },
                    "settlement_date": {
                        "description": "The settlement date of the warehouse",
                        "type": "string",
                        "format": "date",
                        "example": "null"
                    },
                    "expiry_date": {
                        "description": "The expiry date of the warehouse",
                        "type": "string",
                        "format": "date",
                        "example": "2025-12-31"
                    },
                    "product": {
                        "description": "Product Detalis related to the warehouse",
                        "properties": {
                            "name": {
                                "description": "The name of the product",
                                "type": "string",
                                "example": "Iphone 15"
                            },
                            "price": {
                                "description": "The price of the product",
                                "type": "number",
                                "format": "float",
                                "example": "499.99"
                            },
                            "category": {
                                "description": "The category of the product",
                                "type": "string",
                                "example": "Smartphone"
                            },
                            "user": {
                                "description": "The owner of the product",
                                "type": "string",
                                "example": "Hasan Zaeter"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category Model",
                "description": "Category details",
                "properties": {
                    "id": {
                        "description": "The ID of the category",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "The name of the category",
                        "type": "string",
                        "example": "Electronics"
                    }
                },
                "type": "object"
            },
            "Comment": {
                "title": "Comment Model",
                "description": "Comment details",
                "properties": {
                    "id": {
                        "description": "The ID of the comment",
                        "type": "integer",
                        "example": 1
                    },
                    "review_id": {
                        "description": "The ID of the associated review",
                        "type": "integer",
                        "example": 1
                    },
                    "text": {
                        "description": "The comment text. Must provide either 'text' or 'image', or both.",
                        "type": "string",
                        "example": "This is a comment",
                        "nullable": true
                    },
                    "image": {
                        "description": "the image URL of an optional image. Must provide either 'text' or 'image', or both.",
                        "type": "string",
                        "example": "http://example.com/image.jpg",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Contact Information": {
                "title": "Contact Info Model",
                "description": "ContactInfo details",
                "properties": {
                    "id": {
                        "description": "The ID of the contact information",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "The ID of the associated user",
                        "type": "integer",
                        "example": 1
                    },
                    "contact_type_id": {
                        "description": "The ID of the associated contact type",
                        "type": "integer",
                        "example": 1
                    },
                    "link": {
                        "description": "The contact link",
                        "type": "string",
                        "example": "http://example.com/contact"
                    }
                },
                "type": "object"
            },
            "Contact Type": {
                "title": "Contact Type Model",
                "description": "Contact Type details",
                "properties": {
                    "id": {
                        "description": "The ID of Contact type",
                        "type": "integer",
                        "example": 1
                    },
                    "type_english": {
                        "description": "The English name of the contact type",
                        "type": "string",
                        "example": "Email"
                    },
                    "type_arabic": {
                        "description": "The Arabic name of the contact type",
                        "type": "string",
                        "example": "بريد إلكتروني"
                    }
                },
                "type": "object"
            },
            "Expression": {
                "title": "Expression Model",
                "description": "Expression details",
                "properties": {
                    "id": {
                        "description": "The ID of the expression",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "The ID of the user associated with the expression",
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "description": "The ID of the product associated with the expression",
                        "type": "integer",
                        "example": 1
                    },
                    "action": {
                        "description": "the expression",
                        "type": "string",
                        "example": "Like"
                    }
                },
                "type": "object"
            },
            "Offer": {
                "title": "Offer Model",
                "description": "Offer details",
                "properties": {
                    "id": {
                        "description": "The ID of the offer",
                        "type": "integer",
                        "example": 1
                    },
                    "discount_percentage": {
                        "description": "The discount percentage of the offer",
                        "type": "number",
                        "format": "float",
                        "example": 15.5
                    },
                    "start_date": {
                        "description": "The start date of the offer",
                        "type": "string",
                        "format": "date",
                        "example": "2024-09-01"
                    },
                    "end_date": {
                        "description": "The end date of the offer",
                        "type": "string",
                        "format": "date",
                        "example": "2024-12-31"
                    },
                    "product_id": {
                        "description": "The ID of the product associated with the offer",
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product Model",
                "description": "Product details",
                "properties": {
                    "id": {
                        "description": "The ID of the product",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "The name of the product",
                        "type": "string",
                        "example": "Smartphone"
                    },
                    "image": {
                        "description": "The image of the product",
                        "type": "string",
                        "example": "product_image.jpg"
                    },
                    "price": {
                        "description": "The price of the product",
                        "type": "number",
                        "format": "float",
                        "example": 499.99
                    },
                    "description": {
                        "description": "The description of the product",
                        "type": "string",
                        "example": "Samsung A30s white color 8Ram 128GB space"
                    },
                    "current_price": {
                        "description": "The pure price of the product",
                        "type": "number",
                        "format": "float",
                        "example": 422.49
                    },
                    "user_id": {
                        "description": "The owner ID of the product",
                        "type": "integer",
                        "example": 1
                    },
                    "total_amount": {
                        "description": "The total amount of the product",
                        "type": "integer",
                        "example": 100
                    },
                    "expiry_date": {
                        "description": "The expiry date of the product",
                        "type": "string",
                        "format": "date",
                        "example": "2024-12-01"
                    },
                    "category_id": {
                        "description": "The category related to the product",
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Review": {
                "title": "Review Model",
                "description": "Review details",
                "properties": {
                    "id": {
                        "description": "The ID of the review",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "The ID of the user who made the review",
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "description": "The ID of the product being reviewed",
                        "type": "integer",
                        "example": 1
                    },
                    "rating": {
                        "description": "Rating given by the user",
                        "type": "integer",
                        "example": 5
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User Model",
                "description": "User details",
                "properties": {
                    "id": {
                        "description": "The ID of the user",
                        "type": "integer",
                        "example": 1
                    },
                    "First_Name": {
                        "description": "The first name of the user",
                        "type": "string",
                        "example": "John"
                    },
                    "Last_Name": {
                        "description": "The second name of the user",
                        "type": "string",
                        "example": "Doe",
                        "nullable": true
                    },
                    "email": {
                        "description": "The email of the user",
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "fcm_token": {
                        "description": "The fcm token of the user",
                        "type": "string",
                        "example": "sample_fcm_token",
                        "nullable": true
                    },
                    "mobile": {
                        "description": "The phone number of the user",
                        "type": "string",
                        "example": "1234567890"
                    },
                    "Address": {
                        "description": "The address of the user",
                        "type": "string",
                        "example": "123 Main St",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Warehouse": {
                "title": "Warehouse Model",
                "description": "Warehouse details",
                "properties": {
                    "id": {
                        "description": "The ID of the warehouse",
                        "type": "integer",
                        "example": 1
                    },
                    "pure_price": {
                        "description": "The pure price of the warehouse",
                        "type": "number",
                        "format": "float",
                        "example": 300.5
                    },
                    "amount": {
                        "description": "The amount of the warehouse",
                        "type": "number",
                        "format": "integer",
                        "example": "100"
                    },
                    "payment_date": {
                        "description": "The payment date of the warehouse",
                        "type": "string",
                        "format": "date",
                        "example": "2024-09-01"
                    },
                    "settlement_date": {
                        "description": "The settlement date of the warehouse",
                        "type": "string",
                        "format": "date",
                        "example": null
                    },
                    "expiry_date": {
                        "description": "The expiry date of the warehouse",
                        "type": "string",
                        "format": "date",
                        "example": "2024-12-01"
                    },
                    "product_id": {
                        "description": "The product ID related to the warehouse",
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "Enter JWT Bearer token in the format \"Bearer {token}\""
            }
        }
    },
    "tags": [
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "Comments",
            "description": "Comments"
        },
        {
            "name": "Contacts",
            "description": "Contacts"
        },
        {
            "name": "Email Verification",
            "description": "Email Verification"
        },
        {
            "name": "Expressions",
            "description": "Expressions"
        },
        {
            "name": "Offers",
            "description": "Offers"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "Reviews",
            "description": "Reviews"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Warehouse",
            "description": "Warehouse"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ]
}